import matplotlib.pyplot as plt


array1Health = []
arrayHealthAver = []
resultArr = []
arraySick = []
arraySickAver = []
arrayVac = []
arrayVacAver = []
TaverArray = []


def calculatePercentHealthy(NHealthy,NSick,NVaccinated):
    N = NHealthy+NSick+NVaccinated
    NHealthpercentage = (NHealthy*100)/N
    return NHealthpercentage


def calculatePercentNSick(NHealthy,NSick,NVaccinated):
    N = NHealthy + NSick + NVaccinated
    NSickPer = (NSick*100)/N
    return NSickPer


def calculatePercentNVaccinated(NHealthy,NSick,NVaccinated):
    N = NHealthy + NSick + NVaccinated
    NVaccinatedPer = (NVaccinated*100)/N
    return NVaccinatedPer


# 300 * 300
# N = 100
# N = 2000
# N = 4000
# N = 6000
# N = 8000
# N = 10000
# N = 20000

# plot graph of array data as function of iterations
def plotA2(array2):
    #iterations
    array1 = range(10, 101, 10)

    plt.plot(array1, array2)
    # naming the x axis
    plt.xlabel('iterations')

    # function to show the plot
    plt.show()
# function of second answer of report
# return array of average of 10 arrays elements
def averageOf10Arrays(A):
    sum = 0
    sumArray = []
    for j in range(0,10):
        for i in range(0,10):
            sum += A[i][j]
            if i==9:
                sumArray.append(sum)
                sum = 0
    for k in range(0,10):
        aver = sumArray[k]/10
        TaverArray.append(aver)
    print(TaverArray)
    plotA2(TaverArray)
    TaverArray.clear()
    sumArray.clear()

# help calculate average of vac array
def calculateAverOfElementsInArrayV(a):
    sum = 0
    for i in range(0, 10):
        sum += a[i]
    aver = sum/10
    arrayVacAver.append(aver)
    if len(arrayVacAver) == 10:
        print(arrayVacAver)
        arrayVacAver.clear()

# help calculate average of healthy array
def calculateAverOfElementsInArrayH(a):
    sum = 0
    for i in range(0, 10):
        sum += a[i]
    aver = sum/10
    arrayHealthAver.append(aver)
    if len(arrayHealthAver) == 10:
        print(arrayHealthAver)
        arrayHealthAver.clear()
# help calculate average of sick array
def calculateAverOfElementsInArrayS(a):
    sum = 0
    for i in range(0, 10):
        sum += a[i]
    aver = sum/10
    arraySickAver.append(aver)
    if len(arraySickAver) == 10:
        print(arraySickAver)
        arraySickAver.clear()

# input: 3D array
# output: array of averages of all the arrays in inputArray
def aver(d3array, type):
    for i in range(0, 10):
        for j in range(0, 10):
            if type == "H":
                array1Health.append(d3array[j][i][0])
                if j == 9:
                    calculateAverOfElementsInArrayH(array1Health)
                    array1Health.clear()
            elif type == 'S':
                arraySick.append(d3array[j][i][1])
                if j == 9:
                    calculateAverOfElementsInArrayS(arraySick)
                    arraySick.clear()
            elif type == 'V':
                arrayVac.append((d3array[j][i][2]))
                if j == 9:
                    calculateAverOfElementsInArrayV(arrayVac)
                    arrayVac.clear()
# Set 1 array 1
A1 = [[[231, 294, 475], [222, 51, 727], [222, 16, 762], [222, 6, 772], [222, 2, 776], [222, 1, 777], [222, 0, 778], [222, 0, 778], [222, 0, 778], [222, 0, 778]],
[[232, 290, 478], [219, 54, 727], [218, 22, 760], [217, 7, 776], [217, 2, 781], [216, 1, 783], [216, 0, 784], [216, 0, 784], [216, 0, 784], [216, 0, 784]],
[[228, 296, 476], [221, 30, 749], [220, 5, 775], [219, 4, 777], [219, 3, 778], [219, 1, 780], [219, 0, 781], [219, 0, 781], [219, 0, 781], [219, 0, 781]],
[[224, 299, 477], [218, 45, 737], [217, 15, 768], [217, 6, 777], [217, 4, 779], [217, 0, 783], [217, 0, 783], [217, 0, 783], [217, 0, 783], [217, 0, 783]],
[[228, 289, 483], [220, 32, 748], [219, 17, 764], [219, 12, 769], [219, 3, 778], [219, 2, 779], [219, 0, 781], [219, 0, 781], [219, 0, 781], [219, 0, 781]],
[[230, 295, 475], [220, 57, 723], [220, 27, 753], [220, 6, 774], [220, 0, 780], [220, 0, 780], [220, 0, 780], [220, 0, 780], [220, 0, 780], [220, 0, 780]],
[[231, 289, 480], [221, 53, 726], [219, 26, 755], [219, 4, 777], [219, 0, 781], [219, 0, 781], [219, 0, 781], [219, 0, 781], [219, 0, 781], [219, 0, 781]],
[[231, 293, 476], [224, 56, 720], [223, 22, 755], [223, 8, 769], [221, 6, 773], [221, 2, 777], [221, 2, 777], [221, 2, 777], [221, 0, 779], [221, 0, 779]],
[[232, 290, 478], [225, 34, 741], [225, 8, 767], [225, 0, 775], [225, 0, 775], [225, 0, 775], [225, 0, 775], [225, 0, 775], [225, 0, 775], [225, 0, 775]],
[[236, 286, 478], [231, 32, 737], [225, 20, 755], [223, 12, 765], [223, 7, 770], [223, 3, 774], [223, 1, 776], [223, 0, 777], [223, 0, 777], [223, 0, 777]]]

# Set 2 array 1
B1 = [[[470, 298, 232], [452, 56, 492], [451, 18, 531], [451, 2, 547], [451, 2, 547], [451, 0, 549], [451, 0, 549], [451, 0, 549], [451, 0, 549], [451, 0, 549]],
  [[462, 298, 240], [445, 50, 505], [445, 16, 539], [445, 4, 551], [444, 1, 555], [444, 0, 556], [444, 0, 556],[444, 0, 556], [444, 0, 556], [444, 0, 556]],
[[457, 302, 241], [437, 54, 509], [432, 25, 543], [432, 10, 558], [432, 1, 567], [432, 0, 568], [432, 0, 568], [432, 0, 568], [432, 0, 568], [432, 0, 568]],
[[454, 307, 239], [443, 42, 515], [439, 20, 541], [439, 8, 553], [438, 2, 560], [438, 0, 562], [438, 0, 562], [438, 0, 562], [438, 0, 562], [438, 0, 562]],
[[462, 305, 233], [443, 52, 505], [439, 26, 535], [438, 6, 556], [437, 2, 561], [437, 1, 562], [437, 0, 563], [437, 0, 563], [437, 0, 563], [437, 0, 563]],
[[460, 300, 240], [436, 57, 507], [435, 18, 547], [435, 4, 561], [435, 0, 565], [435, 0, 565], [435, 0, 565], [435, 0, 565], [435, 0, 565], [435, 0, 565]],
[[474, 289, 237], [458, 46, 496], [457, 15, 528], [456, 6, 538], [456, 2, 542], [456, 0, 544], [456, 0, 544], [456, 0, 544], [456, 0, 544], [456, 0, 544]],
[[468, 292, 240], [448, 49, 503], [444, 26, 530], [444, 14, 542], [444, 7, 549], [444, 1, 555], [444, 0, 556], [444, 0, 556], [444, 0, 556], [444, 0, 556]],
[[467, 288, 245], [450, 46, 504], [449, 18, 533], [449, 5, 546], [449, 1, 550], [449, 1, 550], [449, 0, 551], [449, 0, 551], [449, 0, 551], [449, 0, 551]],
[[454, 311, 235], [441, 54, 505], [438, 24, 538], [437, 11, 552], [437, 5, 558], [437, 0, 563], [437, 0, 563], [437, 0, 563], [437, 0, 563], [437, 0, 563]]]

# Set 3 array 1
C1 = [[[213, 563, 224], [195, 72, 733], [193, 19, 788], [193, 7, 800], [193, 3, 804], [193, 2, 805], [193, 1, 806], [193, 0, 807], [193, 0, 807], [193, 0, 807]],
      [[212, 561, 227], [197, 61, 742], [196, 24, 780], [196, 6, 798], [196, 1, 803], [196, 0, 804], [196, 0, 804], [196, 0, 804], [196, 0, 804], [196, 0, 804]],
[[212, 559, 229], [190, 78, 732], [190, 28, 782], [190, 12, 798], [190, 5, 805], [190, 1, 809], [190, 0, 810], [190, 0, 810], [190, 0, 810], [190, 0, 810]],
[[213, 556, 231], [201, 40, 759], [199, 14, 787], [198, 7, 795], [198, 2, 800], [198, 0, 802], [198, 0, 802], [198, 0, 802], [198, 0, 802], [198, 0, 802]],
[[215, 557, 228], [204, 54, 742], [204, 17, 779], [203, 6, 791], [203, 3, 794], [203, 0, 797], [203, 0, 797], [203, 0, 797], [203, 0, 797], [203, 0, 797]],
[[218, 556, 226], [206, 49, 745], [206, 11, 783], [206, 7, 787], [206, 2, 792], [206, 1, 793], [206, 0, 794], [206, 0, 794], [206, 0, 794], [206, 0, 794]],
[[221, 552, 227], [208, 59, 733], [206, 20, 774], [206, 2, 792], [206, 3, 791], [206, 0, 794], [206, 0, 794], [206, 0, 794], [206, 0, 794], [206, 0, 794]],
[[210, 562, 228], [196, 50, 754], [196, 18, 786], [196, 7, 797], [196, 3, 801], [196, 0, 804], [196, 0, 804], [196, 0, 804], [196, 0, 804], [196, 0, 804]],
[[218, 562, 220], [207, 54, 739], [205, 19, 776], [205, 4, 791], [205, 0, 795], [205, 0, 795], [205, 0, 795], [205, 0, 795], [205, 0, 795], [205, 0, 795]],
[[209, 562, 229], [198, 48, 754], [198, 20, 782], [198, 6, 796], [198, 4, 798], [197, 4, 799], [197, 3, 800], [197, 2, 801], [197, 0, 803], [197, 0, 803]]]

# Set 1 array 2
A2 = [[[334, 467, 699], [311, 110, 1079], [307, 53, 1140], [304, 24, 1172], [303, 10, 1187], [303, 2, 1195], [303, 0, 1197], [303, 0, 1197], [303, 0, 1197], [303, 0, 1197]],
[[330, 467, 703], [310, 93, 1097], [307, 53, 1140], [306, 26, 1168], [306, 11, 1183], [305, 3, 1192], [305, 2, 1193], [305, 1, 1194], [305, 0, 1195], [305, 0, 1195]],
[[336, 477, 687], [308, 108, 1084], [301, 38, 1161], [297, 14, 1189], [296, 8, 1196], [296, 0, 1204], [296, 0, 1204], [296, 0, 1204], [296, 0, 1204], [296, 0, 1204]],
[[338, 477, 685], [317, 116, 1067], [315, 62, 1123], [315, 22, 1163], [314, 11, 1175], [313, 7, 1180], [313, 2, 1185], [313, 1, 1186], [313, 0, 1187], [313, 0, 1187]],
[[337, 483, 680], [312, 107, 1081], [307, 42, 1151], [304, 15, 1181], [304, 8, 1188], [304, 6, 1190], [304, 2, 1194], [304, 0, 1196], [304, 0, 1196], [304, 0, 1196]],
[[336, 469, 695], [320, 107, 1073], [314, 42, 1144], [313, 10, 1177], [312, 6, 1182], [312, 2, 1186], [312, 2, 1186], [312, 0, 1188], [312, 0, 1188], [312, 0, 1188]],
[[330, 484, 686], [317, 99, 1084], [314, 47, 1139], [313, 24, 1163], [312, 21, 1167], [312, 7, 1181], [312, 0, 1188], [312, 0, 1188], [312, 0, 1188], [312, 0, 1188]],
[[334, 477, 689], [323, 102, 1075], [318, 36, 1146], [318, 12, 1170], [318, 2, 1180], [318, 1, 1181], [318, 0, 1182], [318, 0, 1182], [318, 0, 1182], [318, 0, 1182]],
[[330, 484, 686], [314, 92, 1094], [311, 43, 1146], [311, 11, 1178], [311, 5, 1184], [311, 2, 1187], [311, 0, 1189], [311, 0, 1189], [311, 0, 1189], [311, 0, 1189]],
[[339, 473, 688], [327, 111, 1062], [323, 45, 1132], [323, 13, 1164], [322, 5, 1173], [322, 4, 1174], [322, 2, 1176], [322, 0, 1178], [322, 0, 1178], [322, 0, 1178]]]

# Set 2 array 2
B2 = [[[669, 489, 342], [626, 118, 756], [616, 52, 832], [610, 34, 856], [609, 18, 873], [606, 11, 883], [605, 7, 888], [603, 5, 892], [603, 4, 893], [603, 1, 896]],
      [[650, 502, 348], [616, 120, 764], [606, 55, 839], [605, 22, 873], [605, 11, 884], [605, 5, 890], [604, 4, 892],[604, 0, 896], [604, 0, 896], [604, 0, 896]],
[[649, 499, 352], [613, 116, 771], [602, 58, 840], [600, 18, 882], [600, 8, 892], [600, 6, 894], [600, 1, 899], [600, 0, 900], [600, 0, 900], [600, 0, 900]],
[[652, 504, 344], [604, 145, 751], [592, 84, 824], [587, 44, 869], [584, 20, 896], [582, 7, 911], [582, 1, 917], [582, 0, 918], [582, 0, 918], [582, 0, 918]],
[[659, 501, 340], [615, 124, 761], [608, 63, 829], [604, 36, 860], [604, 19, 877], [603, 9, 888], [603, 4, 893], [603, 2, 895], [603, 1, 896], [603, 0, 897]],
[[657, 494, 349], [618, 109, 773], [613, 48, 839], [610, 18, 872], [610, 8, 882], [610, 5, 885], [610, 2, 888], [610, 0, 890], [610, 0, 890], [610, 0, 890]],
[[658, 501, 341], [614, 143, 743], [606, 69, 825], [603, 40, 857], [601, 19, 880], [599, 10, 891], [598, 7, 895], [598, 7, 895], [598, 5, 897], [598, 3, 899]],
[[672, 485, 343], [635, 100, 765], [628, 32, 840], [624, 15, 861], [623, 4, 873], [623, 2, 875], [623, 0, 877], [623, 0, 877], [623, 0, 877], [623, 0, 877]],
[[669, 480, 351], [638, 102, 760], [631, 53, 816], [630, 25, 845], [629, 11, 860], [629, 1, 870], [629, 0, 871], [629, 0, 871], [629, 0, 871], [629, 0, 871]],
[[665, 494, 341], [620, 117, 763], [611, 54, 835], [609, 21, 870], [609, 3, 888], [609, 1, 890], [608, 2, 890], [608, 1, 891], [608, 0, 892], [608, 0, 892]]]

# Set 3 array 2
C2 = [[[288, 889, 323], [266, 126, 1108], [265, 50, 1185], [264, 25, 1211], [264, 4, 1232], [264, 1, 1235], [264, 0, 1236], [264, 0, 1236], [264, 0, 1236], [264, 0, 1236]],
      [[296, 877, 327], [262, 135, 1103], [260, 62, 1178], [258, 24, 1218], [258, 13, 1229], [258, 6, 1236],
       [258, 0, 1242], [258, 0, 1242], [258, 0, 1242], [258, 0, 1242]],
      [[299, 874, 327], [261, 137, 1102], [255, 57, 1188], [253, 25, 1222], [253, 11, 1236], [253, 9, 1238],
       [253, 5, 1242], [253, 1, 1246], [253, 0, 1247], [253, 0, 1247]],
      [[303, 881, 316], [275, 124, 1101], [273, 71, 1156], [272, 24, 1204], [272, 9, 1219], [272, 0, 1228],
       [272, 0, 1228], [272, 0, 1228], [272, 0, 1228], [272, 0, 1228]],
      [[297, 876, 327], [273, 135, 1092], [271, 59, 1170], [271, 23, 1206], [271, 9, 1220], [271, 3, 1226],
       [271, 3, 1226], [271, 0, 1229], [271, 0, 1229], [271, 0, 1229]],
      [[291, 888, 321], [265, 125, 1110], [261, 43, 1196], [259, 16, 1225], [259, 5, 1236], [259, 1, 1240],
       [259, 0, 1241], [259, 0, 1241], [259, 0, 1241], [259, 0, 1241]],
      [[297, 876, 327], [277, 117, 1106], [276, 41, 1183], [274, 11, 1215], [274, 2, 1224], [274, 0, 1226],
       [274, 0, 1226], [274, 0, 1226], [274, 0, 1226], [274, 0, 1226]],
      [[286, 894, 320], [257, 141, 1102], [256, 60, 1184], [255, 31, 1214], [255, 17, 1228], [255, 5, 1240],
       [255, 2, 1243], [255, 2, 1243], [255, 1, 1244], [255, 1, 1244]],
      [[294, 885, 321], [257, 137, 1106], [256, 60, 1184], [256, 28, 1216], [256, 17, 1227], [256, 8, 1236],
       [256, 2, 1242], [256, 0, 1244], [256, 0, 1244], [256, 0, 1244]],
      [[286, 891, 323], [259, 122, 1119], [256, 38, 1206], [256, 14, 1230], [256, 5, 1239], [255, 5, 1240],
       [255, 2, 1243], [255, 2, 1243], [255, 0, 1245], [255, 0, 1245]]]

# Set 1 array 3
A3 = [[[424, 662, 914], [390, 205, 1405], [382, 108, 1510], [376, 66, 1558], [373, 40, 1587], [372, 22, 1606], [372, 13, 1615], [371, 14, 1615], [371, 9, 1620], [371, 5, 1624]],
      [[421, 672, 907], [394, 217, 1389], [385, 130, 1485], [381, 61, 1558], [380, 33, 1587], [379, 19, 1602],
       [379, 20, 1601], [379, 9, 1612], [379, 6, 1615], [379, 5, 1616]],
      [[440, 673, 887], [391, 223, 1386], [381, 114, 1505], [379, 45, 1576], [379, 27, 1594], [379, 15, 1606],
       [379, 10, 1611], [379, 3, 1618], [379, 0, 1621], [379, 0, 1621]],
      [[417, 690, 893], [381, 212, 1407], [373, 98, 1529], [370, 45, 1585], [370, 24, 1606], [370, 11, 1619],
       [370, 4, 1626], [370, 3, 1627], [370, 1, 1629], [370, 0, 1630]],
      [[422, 675, 903], [399, 195, 1406], [391, 90, 1519], [390, 47, 1563], [389, 22, 1589], [389, 8, 1603],
       [389, 8, 1603], [389, 3, 1608], [389, 2, 1609], [389, 0, 1611]],
      [[423, 682, 895], [387, 184, 1429], [380, 83, 1537], [374, 49, 1577], [372, 19, 1609], [371, 8, 1621],
       [371, 5, 1624], [371, 3, 1626], [371, 1, 1628], [371, 1, 1628]],
      [[431, 672, 897], [390, 207, 1403], [377, 130, 1493], [373, 72, 1555], [372, 31, 1597], [368, 22, 1610],
       [368, 16, 1616], [368, 8, 1624], [368, 3, 1629], [368, 4, 1628]],
      [[424, 673, 903], [387, 194, 1419], [377, 111, 1512], [367, 59, 1574], [365, 40, 1595], [365, 20, 1615],
       [365, 11, 1624], [364, 8, 1628], [364, 5, 1631], [362, 5, 1633]],
      [[436, 665, 899], [387, 209, 1404], [376, 135, 1489], [368, 79, 1553], [368, 24, 1608], [368, 14, 1618],
       [368, 7, 1625], [368, 0, 1632], [368, 0, 1632], [368, 0, 1632]],
      [[428, 664, 908], [398, 184, 1418], [393, 90, 1517], [390, 44, 1566], [389, 25, 1586], [388, 11, 1601],
       [388, 2, 1610], [388, 0, 1612], [388, 0, 1612], [388, 0, 1612]]]
# Set 2 array 3
B3 = [[[855, 707, 438], [777, 231, 992], [748, 146, 1106], [738, 76, 1186], [736, 33, 1231], [736, 12, 1252], [734, 11, 1255], [733, 7, 1260], [732, 8, 1260], [732, 3, 1265]],
      [[825, 732, 443], [750, 239, 1011], [725, 156, 1119], [715, 90, 1195], [711, 57, 1232], [709, 40, 1251],
       [706, 19, 1275], [704, 11, 1285], [703, 6, 1291], [703, 3, 1294]],
      [[842, 710, 448], [780, 219, 1001], [761, 111, 1128], [753, 63, 1184], [750, 35, 1215], [748, 22, 1230],
       [748, 14, 1238], [747, 9, 1244], [747, 3, 1250], [747, 2, 1251]],
      [[842, 699, 459], [761, 241, 998], [742, 116, 1142], [732, 59, 1209], [730, 39, 1231], [728, 24, 1248],
       [727, 13, 1260], [727, 6, 1267], [727, 1, 1272], [727, 0, 1273]],
      [[812, 737, 451], [724, 267, 1009], [708, 156, 1136], [701, 65, 1234], [697, 49, 1254], [690, 43, 1267],
       [688, 32, 1280], [686, 14, 1300], [685, 8, 1307], [684, 4, 1312]],
      [[836, 711, 453], [753, 233, 1014], [741, 120, 1139], [732, 66, 1202], [727, 36, 1237], [727, 12, 1261],
       [726, 9, 1265], [726, 6, 1268], [726, 5, 1269], [726, 2, 1272]],
      [[848, 696, 456], [770, 216, 1014], [745, 137, 1118], [736, 77, 1187], [733, 50, 1217], [730, 28, 1242],
       [728, 17, 1255], [726, 16, 1258], [726, 9, 1265], [726, 3, 1271]],
      [[829, 723, 448], [747, 265, 988], [726, 151, 1123], [715, 81, 1204], [711, 57, 1232], [706, 35, 1259],
       [706, 16, 1278], [705, 8, 1287], [705, 3, 1292], [705, 1, 1294]],
      [[842, 720, 438], [756, 259, 985], [727, 151, 1122], [720, 77, 1203], [714, 43, 1243], [711, 30, 1259],
       [710, 10, 1280], [710, 4, 1286], [710, 3, 1287], [710, 0, 1290]],
      [[825, 732, 443], [743, 245, 1012], [728, 121, 1151], [722, 65, 1213], [716, 38, 1246], [716, 14, 1270],
       [715, 9, 1276], [715, 7, 1278], [714, 10, 1276], [714, 8, 1278]]]
# Set 3 array 3
C3 = [[[351, 1256, 393], [304, 246, 1450], [300, 102, 1598], [296, 36, 1668], [296, 13, 1691], [296, 11, 1693], [296, 5, 1699], [296, 3, 1701], [296, 1, 1703], [296, 0, 1704]],
      [[351, 1256, 393], [304, 246, 1450], [300, 102, 1598], [296, 36, 1668], [296, 13, 1691], [296, 11, 1693],
       [296, 5, 1699], [296, 3, 1701], [296, 1, 1703], [296, 0, 1704]],
      [[372, 1215, 413], [317, 220, 1463], [311, 91, 1598], [308, 49, 1643], [308, 23, 1669], [308, 8, 1684],
       [308, 2, 1690], [308, 4, 1688], [308, 1, 1691], [307, 3, 1690]],
      [[380, 1193, 427], [328, 208, 1464], [318, 101, 1581], [317, 47, 1636], [316, 29, 1655], [315, 10, 1675],
       [315, 5, 1680], [315, 6, 1679], [315, 9, 1676], [315, 4, 1681]],
      [[335, 1271, 394], [285, 225, 1490], [276, 117, 1607], [273, 70, 1657], [271, 41, 1688], [271, 17, 1712],
       [270, 8, 1722], [270, 2, 1728], [270, 0, 1730], [270, 0, 1730]],
      [[362, 1230, 408], [307, 239, 1454], [294, 138, 1568], [290, 73, 1637], [290, 41, 1669], [286, 31, 1683],
       [286, 16, 1698], [286, 16, 1698], [286, 8, 1706], [286, 6, 1708]],
      [[373, 1222, 405], [329, 228, 1443], [317, 110, 1573], [314, 67, 1619], [312, 39, 1649], [312, 23, 1665],
       [312, 9, 1679], [312, 2, 1686], [312, 1, 1687], [312, 0, 1688]],
      [[347, 1246, 407], [300, 212, 1488], [295, 111, 1594], [293, 50, 1657], [292, 29, 1679], [292, 16, 1692],
       [292, 9, 1699], [292, 7, 1701], [292, 5, 1703], [292, 1, 1707]],
      [[356, 1228, 416], [308, 238, 1454], [299, 121, 1580], [297, 63, 1640], [291, 34, 1675], [291, 12, 1697],
       [291, 8, 1701], [290, 2, 1708], [290, 1, 1709], [290, 0, 1710]],
      [[351, 1245, 404], [302, 217, 1481], [295, 109, 1596], [294, 64, 1642], [294, 33, 1673], [293, 17, 1690],
       [293, 9, 1698], [292, 9, 1699], [292, 4, 1704], [292, 4, 1704]]]

# arrays of results of running code per a range of T-values
T10 = [[1176, 159, 39, 5, 3, 1, 4, 2, 4, 1],
[1105, 143, 36, 14, 2, 1, 0, 0, 0, 0],
[1175, 164, 57, 20, 4, 0, 0, 0, 0, 0],
[1155, 169, 57, 16, 10, 0, 0, 0, 0, 0],
[1148, 163, 52, 15, 3, 0, 0, 0, 0, 0],
[1186, 141, 47, 15, 9, 5, 1, 0, 0, 0],
[1156, 158, 55, 20, 10, 5, 2, 0, 0, 0],
[1173, 166, 64, 33, 16, 4, 4, 3, 2, 1],
[1159, 157, 47, 19, 5, 1, 0, 0, 0, 0],
[1186, 195, 100, 40, 31, 9, 5, 0, 0, 0]]
T20 = [[1153, 1481, 615, 509, 400, 297, 246, 224, 162, 139],
[1188, 1509, 617, 547, 459, 388, 330, 255, 215, 187],
[1163, 1480, 600, 514, 421, 323, 243, 206, 185, 162],
[1199, 1513, 584, 462, 348, 301, 258, 197, 167, 149],
[1151, 1494, 625, 522, 408, 307, 245, 208, 184, 153],
[1157, 1499, 619, 504, 413, 330, 274, 237, 213, 189],
[1160, 1512, 642, 512, 416, 358, 283, 208, 157, 137],
[1144, 1461, 617, 541, 451, 356, 285, 247, 195, 171],
[1153, 1461, 557, 466, 376, 312, 275, 214, 196, 193],
[1170, 1521, 634, 488, 414, 371, 299, 234, 201, 185]]
T30 = [[1153,1493,1787,977, 944,891, 809, 765, 716,648],
[1150,1473,1753, 933,904, 871, 827, 738, 727,660],
[1134, 1438, 1725, 928, 923, 892, 773, 685, 646, 641],
[1148, 1466, 1774, 1005, 974, 947, 829, 764, 740, 719],
[1160, 1479, 1774, 956, 932, 897, 787, 754, 724, 715],
[1179, 1495, 1772, 913, 903, 883, 835, 801, 758, 734],
[1147, 1468, 1743, 927, 898, 885, 797, 738, 736, 740],
[1175, 1515, 1831, 988, 939, 879, 810, 777, 743, 703],
[1187, 1532, 1850, 1027, 1027, 1019, 951, 873, 824, 749],
[1169, 1504, 1774, 955, 912, 881, 780, 737, 721, 700]]
T40 = [[1124, 1423, 1731, 1983, 1223, 1254, 1258, 1320, 1250, 1214],
[1151, 1473, 1759, 1989, 1223, 1200, 1185, 1255, 1170, 1164],
[1151, 1470, 1763, 1989, 1195, 1239, 1293, 1384, 1327, 1288],
[1159, 1497, 1820, 2058, 1281, 1289, 1297, 1356, 1285, 1211],
[1165, 1550, 1837, 2087, 1291, 1233, 1248, 1268, 1192, 1174],
[1170, 1450, 1767, 2060, 1251, 1301, 1303, 1321, 1242, 1195],
[1118, 1421, 1739, 1980, 1224, 1233, 1230, 1273, 1214, 1200],
[1134, 1459, 1770, 2019, 1261, 1267, 1268, 1311, 1235, 1198],
[1144, 1475, 1768, 2037, 1293, 1316, 1324, 1335, 1226, 1163],
[1194, 1502, 1822, 2073, 1262, 1253, 1230, 1307, 1250, 1226]]
T50 = [[1108, 1423, 1730, 1995, 2257, 1501, 1519, 1548, 1608, 1661],
[1169, 1502, 1771, 1995, 2196, 1428, 1402, 1482, 1563, 1633],
[1150, 1460, 1756, 2010, 2216, 1405, 1384, 1392, 1441, 1529],
[1151, 1458, 1735, 2003, 2235, 1492, 1519, 1575, 1620, 1707],
[1185, 1536, 1869, 2104, 2310, 1510, 1530, 1518, 1602, 1700],
[1147, 1472, 1779, 2035, 2239, 1487, 1456, 1458, 1507, 1570],
[1187, 1536, 1800, 2042, 2252, 1429, 1426, 1434, 1506, 1581],
[1127, 1470, 1772, 2016, 2215, 1450, 1470, 1495, 1533, 1629],
[1153, 1471, 1764, 2021, 2243, 1460, 1493, 1481, 1545, 1630],
[1170, 1488, 1834, 2077, 2304, 1476, 1489, 1470, 1525, 1597]]
T60 = [[1178, 1524, 1815, 2056, 2264, 2455, 1678, 1666, 1700, 1776],
[1133, 1459, 1745, 2005, 2220, 2393, 1643, 1630, 1670, 1714],
[1162, 1463, 1763, 2031, 2247, 2428, 1608, 1648, 1662, 1662],
[1159, 1493, 1776, 2021, 2258, 2456, 1660, 1659, 1680, 1766],
[1144, 1462, 1729, 1998, 2208, 2371, 1621, 1637, 1688, 1746],
[1157, 1475, 1743, 1990, 2191, 2392, 1619, 1657, 1745, 1789],
[1171, 1516, 1778, 2023, 2247, 2418, 1654, 1628, 1691, 1745],
[1210, 1566, 1827, 2073, 2280, 2460, 1630, 1632, 1717, 1771],
[1184, 1494, 1780, 2037, 2236, 2432, 1614, 1644, 1659, 1706],
[1160, 1459, 1750, 2020, 2214, 2407, 1617, 1628, 1638, 1671]]
T70 = [[1162, 1500, 1778, 2035, 2238, 2405, 2552, 1767, 1773, 1812],
[1165, 1462, 1771, 2040, 2274, 2434, 2564, 1776, 1801, 1806],
[1154, 1475, 1766, 2043, 2250, 2436, 2580, 1790, 1815, 1812],
[1141, 1457, 1713, 1955, 2195, 2398, 2546, 1769, 1770, 1814],
[1172, 1518, 1825, 2056, 2246, 2424, 2542, 1739, 1709, 1724],
[1158, 1513, 1808, 2074, 2270, 2429, 2574, 1792, 1759, 1769],
[1140, 1484, 1817, 2063, 2278, 2445, 2586, 1810, 1816, 1760],
[1178, 1512, 1820, 2067, 2258, 2439, 2571, 1775, 1766, 1787],
[1166, 1492, 1781, 2047, 2250, 2425, 2580, 1779, 1774, 1803],
[1164, 1488, 1779, 2039, 2237, 2417, 2551, 1776, 1768, 1757]]
T80 = [[1194, 1547, 1854, 2061, 2279, 2462, 2584, 2692, 2783, 1924],
[1175, 1501, 1795, 2060, 2275, 2459, 2610, 2720, 1890, 1865],
[1148, 1481, 1767, 2051, 2259, 2434, 2596, 2675, 1864, 1847],
[1175, 1516, 1817, 2052, 2276, 2443, 2582, 2678, 1865, 1848],
[1126, 1434, 1752, 2002, 2213, 2397, 2556, 2671, 1911, 1915],
[1209, 1521, 1774, 2024, 2257, 2457, 2604, 2729, 1864, 1877],
[1145, 1498, 1823, 2086, 2311, 2505, 2658, 2751, 1970, 1930],
[1139, 1484, 1778, 2046, 2275, 2460, 2606, 2706, 1909, 1857],
[1194, 1506, 1805, 2047, 2253, 2413, 2565, 2686, 1870, 1889],
[1168, 1474, 1755, 1998, 2202, 2406, 2565, 2678, 1854, 1902]]
T90 = [[1189, 1540, 1837, 2096, 2308, 2477, 2614, 2710, 1902, 1880],
[1154, 1519, 1803, 2078, 2266, 2440, 2591, 2695, 2786, 1960],
[1152, 1504, 1819, 2082, 2273, 2438, 2594, 2692, 2751, 1958],
[1173, 1499, 1775, 2010, 2207, 2387, 2539, 2659, 2755, 1909],
[1158, 1515, 1826, 2053, 2271, 2436, 2582, 2701, 2780, 1974],
[1165, 1459, 1764, 2027, 2242, 2430, 2546, 2663, 2742, 1923],
[1174, 1530, 1812, 2074, 2263, 2460, 2576, 2697, 2786, 1964],
[1146, 1498, 1807, 2045, 2243, 2413, 2562, 2688, 2773, 1956],
[1148, 1447, 1776, 2040, 2290, 2465, 2607, 2716, 2799, 1985],
[1165, 1497, 1794, 2061, 2265, 2415, 2566, 2656, 2760, 1955]]

# input: 2D array
# output: plot graph of the 3 first arrays in 2D array as function of number of iteration
def plotGraph(array2D):
    axis_x = list(range(10, 110, 10))
    plot1 = array2D[0]
    plot2 = array2D[1]
    plot3 = array2D[2]
    plt.plot(axis_x, plot1)
    plt.plot(axis_x, plot2)
    plt.plot(axis_x, plot3)
    # naming the x axis
    plt.xlabel('number of iterations')

    # function to show the plot
    plt.show()



def run1():
    print("hiii1")
    print("aver of healthy people a1:")
    aver(A1, "H")
    print("aver of Sick people a1:")
    aver(A1, "S")
    print("aver of vac people a1:")
    aver(A1, "V")

    print("aver of healthy people B1:")
    aver(B1, "H")
    print("aver of Sick people B1:")
    aver(B1, "S")
    print("aver of vac people B1:")
    aver(B1, "V")

    print("aver of healthy people C1:")
    aver(C1, "H")
    print("aver of Sick people C1:")
    aver(C1, "S")
    print("aver of vac people C1:")
    aver(C1, "V")

    check1 = [[230.3, 222.1, 220.8, 220.4, 220.2, 220.1, 220.1, 220.1, 220.1, 220.1],
              [292.1, 44.4, 17.8, 6.5, 2.7, 1.0, 0.3, 0.2, 0.0, 0.0],
              [477.6, 733.5, 761.4, 773.1, 777.1, 778.9, 779.6, 779.7, 779.9, 779.9]]

    check2 = [[462.8, 445.3, 442.9, 442.6, 442.3, 442.3, 442.3, 442.3, 442.3, 442.3],
              [299.0, 50.6, 20.6, 7.0, 2.3, 0.3, 0.0, 0.0, 0.0, 0.0],
              [238.2, 504.1, 536.5, 550.4, 555.4, 557.4, 557.7, 557.7, 557.7, 557.7]]

    check3 = [[214.1, 200.2, 199.3, 199.1, 199.1, 199.0, 199.0, 199.0, 199.0, 199.0],
              [559.0, 56.5, 19.0, 6.4, 2.6, 0.8, 0.4, 0.2, 0.0, 0.0],
              [226.9, 743.3, 781.7, 794.5, 798.3, 800.2, 800.6, 800.8, 801.0, 801.0]]

    plotGraph(check1)
    plotGraph(check2)
    plotGraph(check3)
def run2():
    print("run2")
    print("aver of healthy people A2:")
    aver(A2, "H")
    print("aver of Sick people A2:")
    aver(A2, "S")
    print("aver of vac people A2:")
    aver(A2, "V")

    print("aver of healthy people B2:")
    aver(B2, "H")
    print("aver of Sick people B2:")
    aver(B2, "S")
    print("aver of vac people B2:")
    aver(B2, "V")

    print("aver of healthy people C2:")
    aver(C2, "H")
    print("aver of Sick people C2:")
    aver(C2, "S")
    print("aver of vac people C2:")
    aver(C2, "V")

    check4 = [[334.4, 315.9, 311.7, 310.4, 309.8, 309.6, 309.6, 309.6, 309.6, 309.6],
              [475.8, 104.5, 46.1, 17.1, 8.7, 3.4, 1.0, 0.2, 0.0, 0.0],
              [689.8, 1079.6, 1142.2, 1172.5, 1181.5, 1187.0, 1189.4, 1190.2, 1190.4, 1190.4]]
    check5 = [[660.0, 619.9, 611.3, 608.2, 607.4, 606.6, 606.2, 606.0, 606.0, 606.0],
              [494.9, 119.4, 56.8, 27.3, 12.1, 5.7, 2.8, 1.5, 1.0, 0.4],
              [345.1, 760.7, 831.9, 864.5, 880.5, 887.7, 891.0, 892.5, 893.0, 893.6]]
    check6 = [[293.7, 265.2, 262.9, 261.8, 261.8, 261.7, 261.7, 261.7, 261.7, 261.7],
              [883.1, 129.9, 54.1, 22.1, 9.2, 3.8, 1.4, 0.5, 0.1, 0.1],
              [323.2, 1104.9, 1183.0, 1216.1, 1229.0, 1234.5, 1236.9, 1237.8, 1238.2, 1238.2]]
    plotGraph(check4)
    plotGraph(check5)
    plotGraph(check6)
def run3():
    print("run3")
    print("aver of healthy people A3:")
    aver(A3, "H")
    print("aver of Sick people A3:")
    aver(A3, "S")
    print("aver of vac people A3:")
    aver(A3, "V")

    print("aver of healthy people B3:")
    aver(B3, "H")
    print("aver of Sick people B3:")
    aver(B3, "S")
    print("aver of vac people B3:")
    aver(B3, "V")

    print("aver of healthy people C3:")
    aver(C3, "H")
    print("aver of Sick people C3:")
    aver(C3, "S")
    print("aver of vac people C3:")
    aver(C3, "V")
    check7 = [[426.6, 390.4, 381.5, 376.8, 375.7, 374.9, 374.9, 374.7, 374.7, 374.5],
              [672.8, 203.0, 108.9, 56.7, 28.5, 15.0, 9.6, 5.1, 2.7, 2.0],
              [900.6, 1406.6, 1509.6, 1566.5, 1595.8, 1610.1, 1615.5, 1620.2, 1622.6, 1623.5]]
    check8 = [[835.6, 756.1, 735.1, 726.4, 722.5, 720.1, 718.8, 717.9, 717.5, 717.4],
              [716.7, 241.5, 136.5, 71.9, 43.7, 26.0, 15.0, 8.8, 5.6, 2.6],
              [447.7, 1002.4, 1128.4, 1201.7, 1233.8, 1253.9, 1266.2, 1273.3, 1276.9, 1280.0]]
    check9 = [[357.8, 308.4, 300.5, 297.8, 296.6, 296.0, 295.9, 295.7, 295.7, 295.6],
              [1236.2, 227.9, 110.2, 55.5, 29.5, 15.6, 7.6, 5.4, 3.1, 1.8],
              [406.0, 1463.7, 1589.3, 1646.7, 1673.9, 1688.4, 1696.5, 1698.9, 1701.2, 1702.6]]
    plotGraph(check7)
    plotGraph(check8)
    plotGraph(check9)
def run4():
    # T=10
    averageOf10Arrays(T10)
    # T=20
    averageOf10Arrays(T20)
    # T=30
    averageOf10Arrays(T30)
    # T=40
    averageOf10Arrays(T40)
    # T=50
    averageOf10Arrays(T50)
    # T=60
    averageOf10Arrays(T60)
    # T=70
    averageOf10Arrays(T70)
    # T=80
    averageOf10Arrays(T80)
    # T=90
    averageOf10Arrays(T90)


def run():
    # calculate the average of arrays and the appropriate graph
    # you can keep watching the next figures by closing the figure windows
    # these functions help us to answer the third question
    run1()
    run2()
    run3()
    # these functions help us to answer the second question
    run4()

#call the function calculate and plot the data of Report
run()

'''

# PerForPlotA2(A, length)

arrForV = [[477.6, 733.5, 761.4, 773.1, 777.1, 778.9, 779.6, 779.7, 779.9, 779.9],
[238.2, 504.1, 536.5, 550.4, 555.4, 557.4, 557.7, 557.7, 557.7, 557.7],
[226.9, 743.3, 781.7, 794.5, 798.3, 800.2, 800.6, 800.8, 801.0, 801.0]]

arr2ForV = [[689.8, 1079.6, 1142.2, 1172.5, 1181.5, 1187.0, 1189.4, 1190.2, 1190.4, 1190.4],
[345.1, 760.7, 831.9, 864.5, 880.5, 887.7, 891.0, 892.5, 893.0, 893.6],
[323.2, 1104.9, 1183.0, 1216.1, 1229.0, 1234.5, 1236.9, 1237.8, 1238.2, 1238.2]]

arr3ForV = [[900.6, 1406.6, 1509.6, 1566.5, 1595.8, 1610.1, 1615.5, 1620.2, 1622.6, 1623.5],
[447.7, 1002.4, 1128.4, 1201.7, 1233.8, 1253.9, 1266.2, 1273.3, 1276.9, 1280.0],
[406.0, 1463.7, 1589.3, 1646.7, 1673.9, 1688.4, 1696.5, 1698.9, 1701.2, 1702.6]]

plotA1(arrForV)
plotA1(arr2ForV)
plotA1(arr3ForV)


'''

'''



# need to plot
arrForH = [[230.3, 222.1, 220.8, 220.4, 220.2, 220.1, 220.1, 220.1, 220.1, 220.1],
       [462.8, 445.3, 442.9, 442.6, 442.3, 442.3, 442.3, 442.3, 442.3, 442.3],
       [214.1, 200.2, 199.3, 199.1, 199.1, 199.0, 199.0, 199.0, 199.0, 199.0]]
arr2ForH = [[334.4, 315.9, 311.7, 310.4, 309.8, 309.6, 309.6, 309.6, 309.6, 309.6],
[660.0, 619.9, 611.3, 608.2, 607.4, 606.6, 606.2, 606.0, 606.0, 606.0],
[293.7, 265.2, 262.9, 261.8, 261.8, 261.7, 261.7, 261.7, 261.7, 261.7]]
arr3ForH = [[426.6, 390.4, 381.5, 376.8, 375.7, 374.9, 374.9, 374.7, 374.7, 374.5],
[835.6, 756.1, 735.1, 726.4, 722.5, 720.1, 718.8, 717.9, 717.5, 717.4],
[357.8, 308.4, 300.5, 297.8, 296.6, 296.0, 295.9, 295.7, 295.7, 295.6]]




averS(A1)
averS(B1)
averS(C1)


averS(A2)
averS(B2)
averS(C2)


averS(A3)
averS(B3)
averS(C3)

arr1ForS= [[292.1, 44.4, 17.8, 6.5, 2.7, 1.0, 0.3, 0.2, 0.0, 0.0],
[299.0, 50.6, 20.6, 7.0, 2.3, 0.3, 0.0, 0.0, 0.0, 0.0],
[559.0, 56.5, 19.0, 6.4, 2.6, 0.8, 0.4, 0.2, 0.0, 0.0]]

arr2ForS= [[475.8, 104.5, 46.1, 17.1, 8.7, 3.4, 1.0, 0.2, 0.0, 0.0],
[494.9, 119.4, 56.8, 27.3, 12.1, 5.7, 2.8, 1.5, 1.0, 0.4],
[883.1, 129.9, 54.1, 22.1, 9.2, 3.8, 1.4, 0.5, 0.1, 0.1]]

arr3ForS= [[672.8, 203.0, 108.9, 56.7, 28.5, 15.0, 9.6, 5.1, 2.7, 2.0],
[716.7, 241.5, 136.5, 71.9, 43.7, 26.0, 15.0, 8.8, 5.6, 2.6],
[1236.2, 227.9, 110.2, 55.5, 29.5, 15.6, 7.6, 5.4, 3.1, 1.8]]


plotA1(arr1ForS)
plotA1(arr2ForS)
plotA1(arr3ForS)

'''












